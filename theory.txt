1.Что подрузамевается под тестовой средой?

Тестовая среда это настройка программного обеспечения, оборудования,сети для вы полнения наших тестов.
Разворачивается среда, в которой состояние сервисов, данные и ресурсы будут как в продуктивной среде.Любые изменения проверяются в тестовой среде, а затем выкатываются в Production.

2.В чем отличие build от release?

Build - это версия ПО, которую передают разработчики тестировщикам с целью тестирования. Release- это версия ПО , которая передается уже клиенту. Release- это окончательное приложение после разработки и тестирования.

3.Основные фазы тестирования?
Основными фазами тестирования являются:

- Модульное тестирование -проверяем каждый модуль на наличие ошибок
- Интеграционное тестирование- проверяем часть системы, состоящей из двух и более модулей. Нам необходимо удостовериться, что совместная работа компонентов системы осуществляется корректно.
- Системное тестирование - проверяются поведенческие аспекты системы. На этом этапе проводится не только функциональное тестирование, но и оценка характеристик качества системы- устойчивости, надежности, безопасности и производительности.
- Регресионное тестирование- проверяем, что в результате внесения изменений в код зафиксированные ошибки исправлены, а новые не появляются.
- Приемочное тестирование- проверяем, что продукт функционирует в соответствии с ожиданиями заказчика. Часто проводится с участием представителей заказчика.

4. Что такое импакт анализ?

Импакт анализ это анализ влияния, это указание затронутых мест в проекте при разрабтке новой функциональности или внесении изменений в старую функциональность. 
Импакт анализ полезен в следующих случаях:
- когда у нас меняются требования
- когда вносим изменения в продукт
- когда добавляем новую функциональность в продукт
Информация о изменениях, об их взаимосвязи и влиянии друг на друга помогут тестировщику сфокусироваться на тех функиональностях, которые были затронуты изменениями и не тратить свое время на тестирование тех частей проекта, которые не были затронуты изменениями.

5.Критерии выбора тестов?

Критерии тестирования-это набор признаков, которые предполагают знание особенностей программы (какие-то входные данные, структура, функциональность), целью которых является достижение определенного состояния тестируемого продукта. Требования к идеальному критерию должны обладать следующими свойствами: надежность, достаточность, полнота, проверяемость.

6.Принципы тестирования?
-Тестирование демонстрирует наличие дефектов:Дефекты есть всегда! Даже если мы проведем огромное количество успешных тестов, мы не можем утверждать, что ошибок нет и что нет таких тестов, которые не найдут ошибки. Если мы нашли хотябы одну ошибку, мы можем утверждать, что данное ПО содержит дефекты.

- Исчерпывающее тестирование невозможно:т.е. все протестировать очень сложно, необходимо выработать подход, некую стратегию тестирования. Разработать оптимальное количество тестов для данного проекта, данных заказчиков и продукта.Учесть при этом риски, связанные с бизнесом, технические риски, время и бюджет.

-Ранне тестирование:чем раньше начать тестирование, тем меньше будет "цена дефекта". Чем раньше мы обнаружим баг, тем быстрее, проще и дешевле мы его исправим. Очень важным преимуществом раннего тестирования является экономия времени, поэтому очень важно начинать тестирование на уровне обсуждения и написания требований, спецификации к проекту.

-Скопление дефектов:Многие тестировщики наблюдают такой эффект как "кучкование дефектов". Это часто происхдит из-за того, что какая-то часть кода очень сложная, или потому что внесенные изменения повлекли "эффект домино". Знание этих ньюансов позволяет учитывать такие моменты при написании тестов и уделять "проблемным зонам" внимание. Также проводится анлиз причин возникновения таких зон, с целью предотвращения повторного скопления деффектов в будущем.

-Парадокс пестицида:Если повторять одни и те же наборы тестов снова и снова, то эти тесты перестанут находить ошибки. Т.е в продукте будут оставать те ошибки, которые не выявляют эти тесты. Тесты постоянно необходимо обновлять и добавлять новые, которые будут выполняться на разных частях системы.

-Тестирование зависит от контекста: Этот принцип тесно связан с понятием риска. Влияние того или иного дефекта очень сильно варьируется в зависимости от самого ПО, от его назначения. Одни дефекты могуть быть очень незначительны, другие привести к большим потерям денег, времени, деловой репутации, в некоторых случаях к травмам и смерти.В зависимости от уровня риска определяются какие методологии, техники и типы тестирования будут использоваться.

-Заблуждение об отсутствии ошибок:Даже если мы считаем, что выполнили все тесты и ошибок не обаружили, это вовсе не будет являться гарантией того, что ПО соответсвует нуждам и ожиданиям пользователя. Как бы мы хорошо не протестировали продукт, согласно требований, наше тестирование будет бесполезно, если ПО не удобно для использования и не отвечает основным нуждам пользователей. 

-Принцип GIGO:«garbage in – garbage out» (GIGO) — при неверных входящих данных, будут получены неверные результаты.

7.Что такое независимое тестирование?



